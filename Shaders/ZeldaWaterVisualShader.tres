[gd_resource type="VisualShader" load_steps=62 format=2]

[ext_resource path="res://Textures/WindWaker_T.jpeg" type="Texture" id=1]
[ext_resource path="res://Textures/water_normal2.JPG" type="Texture" id=3]

[sub_resource type="VisualShaderNodeColorConstant" id=1]
output_port_for_preview = 0
constant = Color( 0, 0, 0.15, 1 )

[sub_resource type="VisualShaderNodeColorConstant" id=2]
output_port_for_preview = 0
constant = Color( 0.0313726, 0.0313726, 1, 1 )

[sub_resource type="VisualShaderNodeVectorScalarMix" id=3]

[sub_resource type="VisualShaderNodeTexture" id=4]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeColorOp" id=5]

[sub_resource type="VisualShaderNodeInput" id=6]
input_name = "uv"

[sub_resource type="VisualShaderNodeScalarUniform" id=7]
uniform_name = "UV_Scale"

[sub_resource type="VisualShaderNodeInput" id=8]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorOp" id=9]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=10]
operator = 2

[sub_resource type="VisualShaderNodeInput" id=11]
input_name = "time"

[sub_resource type="VisualShaderNodeTexture" id=12]
texture = ExtResource( 3 )

[sub_resource type="VisualShaderNodeVectorDecompose" id=13]

[sub_resource type="VisualShaderNodeVectorCompose" id=14]

[sub_resource type="VisualShaderNodeInput" id=15]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id=16]

[sub_resource type="VisualShaderNodeVectorOp" id=17]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.2, 0.2, 0.2 ) ]
operator = 2

[sub_resource type="VisualShaderNodeTexture" id=18]
texture = ExtResource( 3 )

[sub_resource type="VisualShaderNodeVectorDecompose" id=19]

[sub_resource type="VisualShaderNodeVectorCompose" id=20]

[sub_resource type="VisualShaderNodeInput" id=21]
input_name = "time"

[sub_resource type="VisualShaderNodeVectorOp" id=22]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( 0.1, 0.1, 0.2 ) ]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=23]

[sub_resource type="VisualShaderNodeInput" id=24]
input_name = "time"

[sub_resource type="VisualShaderNodeInput" id=25]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=26]

[sub_resource type="VisualShaderNodeVectorOp" id=27]

[sub_resource type="VisualShaderNodeVectorOp" id=28]

[sub_resource type="VisualShaderNodeVectorCompose" id=29]

[sub_resource type="VisualShaderNodeVectorDecompose" id=30]

[sub_resource type="VisualShaderNodeScalarUniform" id=31]
uniform_name = "texture_speed"

[sub_resource type="VisualShaderNodeScalarOp" id=32]
operator = 2

[sub_resource type="VisualShaderNodeVectorOp" id=33]

[sub_resource type="VisualShaderNodeVectorOp" id=34]

[sub_resource type="VisualShaderNodeVectorCompose" id=35]

[sub_resource type="VisualShaderNodeInput" id=36]
input_name = "uv"

[sub_resource type="VisualShaderNodeVectorDecompose" id=37]

[sub_resource type="VisualShaderNodeVectorOp" id=38]

[sub_resource type="VisualShaderNodeVectorOp" id=39]

[sub_resource type="VisualShaderNodeVectorCompose" id=40]

[sub_resource type="VisualShaderNodeVectorOp" id=41]
default_input_values = [ 0, Vector3( 0, 0, 0 ), 1, Vector3( -0.1, 0.1, 0 ) ]

[sub_resource type="VisualShaderNodeColorConstant" id=42]
output_port_for_preview = 0
constant = Color( 0.03, 0.03, 1, 1 )

[sub_resource type="VisualShaderNodeVec3Uniform" id=43]
uniform_name = "Dark_Water_Offset"

[sub_resource type="VisualShaderNodeScalarUniform" id=44]
uniform_name = "texture_speed_down_water"

[sub_resource type="VisualShaderNodeScalarOp" id=45]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=46]

[sub_resource type="VisualShaderNodeVectorCompose" id=47]

[sub_resource type="VisualShaderNodeVectorOp" id=48]

[sub_resource type="VisualShaderNodeVectorOp" id=49]

[sub_resource type="VisualShaderNodeVec3Uniform" id=50]
uniform_name = "noise_speed_upper_water"

[sub_resource type="VisualShaderNodeVec3Uniform" id=51]
uniform_name = "noise_speed_down_water"

[sub_resource type="VisualShaderNodeVectorOp" id=52]
operator = 2

[sub_resource type="VisualShaderNodeColorConstant" id=53]
output_port_for_preview = 0
constant = Color( 0.85, 0.93, 1, 1 )

[sub_resource type="VisualShaderNodeVectorOp" id=54]
operator = 2

[sub_resource type="VisualShaderNodeVectorDecompose" id=55]

[sub_resource type="VisualShaderNodeVectorDecompose" id=56]

[sub_resource type="VisualShaderNodeVec3Uniform" id=57]
uniform_name = "Distortion"

[sub_resource type="VisualShaderNodeTexture" id=58]
texture = ExtResource( 1 )

[sub_resource type="VisualShaderNodeVectorScalarMix" id=59]

[resource]
code = "shader_type spatial;
render_mode cull_disabled, specular_schlick_ggx, world_vertex_coords;

uniform float UV_Scale;
uniform vec3 noise_speed_upper_water;
uniform sampler2D tex_frg_29;
uniform vec3 Distortion;
uniform float texture_speed;
uniform sampler2D tex_frg_85;
uniform vec3 Dark_Water_Offset;
uniform vec3 noise_speed_down_water;
uniform sampler2D tex_frg_36;
uniform float texture_speed_down_water;
uniform sampler2D tex_frg_13;



void vertex() {
// Output:0

}

void fragment() {
// Color:7
	vec3 n_out7p0 = vec3(0.030000, 0.030000, 1.000000);
	float n_out7p1 = 1.000000;

// Color:8
	vec3 n_out8p0 = vec3(0.850000, 0.930000, 1.000000);
	float n_out8p1 = 1.000000;

// Input:19
	vec3 n_out19p0 = vec3(UV, 0.0);

// ScalarUniform:18
	float n_out18p0 = UV_Scale;

// VectorOp:20
	vec3 n_out20p0 = n_out19p0 * vec3(n_out18p0);

// Input:50
	vec3 n_out50p0 = vec3(UV, 0.0);

// VectorDecompose:51
	float n_out51p0 = n_out50p0.x;
	float n_out51p1 = n_out50p0.y;
	float n_out51p2 = n_out50p0.z;

// Input:33
	float n_out33p0 = TIME;

// VectorUniform:77
	vec3 n_out77p0 = noise_speed_upper_water;

// VectorOp:79
	vec3 n_out79p0 = vec3(n_out33p0) * n_out77p0;

// VectorDecompose:81
	float n_out81p0 = n_out79p0.x;
	float n_out81p1 = n_out79p0.y;
	float n_out81p2 = n_out79p0.z;

// VectorOp:52
	vec3 n_out52p0 = vec3(n_out51p0) + vec3(n_out81p0);

// VectorOp:53
	vec3 n_out53p0 = vec3(n_out51p1) + vec3(n_out81p1);

// VectorCompose:55
	float n_in55p2 = 0.00000;
	vec3 n_out55p0 = vec3(dot(n_out52p0, vec3(0.333333, 0.333333, 0.333333)), dot(n_out53p0, vec3(0.333333, 0.333333, 0.333333)), n_in55p2);

// Texture:29
	vec4 tex_frg_29_read = texture(tex_frg_29, n_out55p0.xy);
	vec3 n_out29p0 = tex_frg_29_read.rgb;
	float n_out29p1 = tex_frg_29_read.a;

// VectorUniform:83
	vec3 n_out83p0 = Distortion;

// VectorOp:35
	vec3 n_out35p0 = n_out29p0 * n_out83p0;

// VectorDecompose:30
	float n_out30p0 = n_out35p0.x;
	float n_out30p1 = n_out35p0.y;
	float n_out30p2 = n_out35p0.z;

// VectorCompose:31
	float n_in31p2 = 0.00000;
	vec3 n_out31p0 = vec3(n_out30p0, n_out30p1, n_in31p2);

// VectorOp:34
	vec3 n_out34p0 = n_out20p0 + n_out31p0;

// VectorDecompose:56
	float n_out56p0 = n_out34p0.x;
	float n_out56p1 = n_out34p0.y;
	float n_out56p2 = n_out34p0.z;

// Input:26
	float n_out26p0 = TIME;

// ScalarUniform:57
	float n_out57p0 = texture_speed;

// ScalarOp:58
	float n_out58p0 = n_out26p0 * n_out57p0;

// VectorOp:60
	vec3 n_out60p0 = vec3(n_out56p0) + vec3(n_out58p0);

// VectorOp:61
	vec3 n_out61p0 = vec3(n_out56p1) + vec3(n_out58p0);

// VectorCompose:62
	float n_in62p2 = 0.00000;
	vec3 n_out62p0 = vec3(dot(n_out60p0, vec3(0.333333, 0.333333, 0.333333)), dot(n_out61p0, vec3(0.333333, 0.333333, 0.333333)), n_in62p2);

// Texture:85
	vec4 tex_frg_85_read = texture(tex_frg_85, n_out62p0.xy);
	vec3 n_out85p0 = tex_frg_85_read.rgb;
	float n_out85p1 = tex_frg_85_read.a;

// VectorScalarMix:9
	vec3 n_out9p0 = mix(n_out7p0, n_out8p0, dot(n_out85p0, vec3(0.333333, 0.333333, 0.333333)));

// Color:10
	vec3 n_out10p0 = vec3(0.000000, 0.000000, 0.150000);
	float n_out10p1 = 1.000000;

// Color:11
	vec3 n_out11p0 = vec3(0.031373, 0.031373, 1.000000);
	float n_out11p1 = 1.000000;

// Input:16
	vec3 n_out16p0 = vec3(UV, 0.0);

// VectorOp:21
	vec3 n_out21p0 = vec3(n_out18p0) * n_out16p0;

// VectorUniform:70
	vec3 n_out70p0 = Dark_Water_Offset;

// VectorOp:69
	vec3 n_out69p0 = n_out21p0 + n_out70p0;

// Input:63
	vec3 n_out63p0 = vec3(UV, 0.0);

// VectorDecompose:64
	float n_out64p0 = n_out63p0.x;
	float n_out64p1 = n_out63p0.y;
	float n_out64p2 = n_out63p0.z;

// Input:40
	float n_out40p0 = TIME;

// VectorUniform:78
	vec3 n_out78p0 = noise_speed_down_water;

// VectorOp:80
	vec3 n_out80p0 = vec3(n_out40p0) * n_out78p0;

// VectorDecompose:82
	float n_out82p0 = n_out80p0.x;
	float n_out82p1 = n_out80p0.y;
	float n_out82p2 = n_out80p0.z;

// VectorOp:65
	vec3 n_out65p0 = vec3(n_out64p0) + vec3(n_out82p0);

// VectorOp:66
	vec3 n_out66p0 = vec3(n_out64p1) + vec3(n_out82p1);

// VectorCompose:68
	float n_in68p2 = 0.00000;
	vec3 n_out68p0 = vec3(dot(n_out65p0, vec3(0.333333, 0.333333, 0.333333)), dot(n_out66p0, vec3(0.333333, 0.333333, 0.333333)), n_in68p2);

// Texture:36
	vec4 tex_frg_36_read = texture(tex_frg_36, n_out68p0.xy);
	vec3 n_out36p0 = tex_frg_36_read.rgb;
	float n_out36p1 = tex_frg_36_read.a;

// VectorOp:41
	vec3 n_out41p0 = n_out36p0 * n_out83p0;

// VectorDecompose:37
	float n_out37p0 = n_out41p0.x;
	float n_out37p1 = n_out41p0.y;
	float n_out37p2 = n_out41p0.z;

// VectorCompose:38
	float n_in38p2 = 0.00000;
	vec3 n_out38p0 = vec3(n_out37p0, n_out37p1, n_in38p2);

// VectorOp:42
	vec3 n_out42p0 = n_out69p0 + n_out38p0;

// VectorDecompose:73
	float n_out73p0 = n_out42p0.x;
	float n_out73p1 = n_out42p0.y;
	float n_out73p2 = n_out42p0.z;

// Input:49
	float n_out49p0 = TIME;

// ScalarUniform:71
	float n_out71p0 = texture_speed_down_water;

// ScalarOp:72
	float n_out72p0 = n_out49p0 * n_out71p0;

// VectorOp:75
	vec3 n_out75p0 = vec3(n_out73p0) + vec3(n_out72p0);

// VectorOp:76
	vec3 n_out76p0 = vec3(n_out73p1) + vec3(n_out72p0);

// VectorCompose:74
	float n_in74p2 = 0.00000;
	vec3 n_out74p0 = vec3(dot(n_out75p0, vec3(0.333333, 0.333333, 0.333333)), dot(n_out76p0, vec3(0.333333, 0.333333, 0.333333)), n_in74p2);

// Texture:13
	vec4 tex_frg_13_read = texture(tex_frg_13, n_out74p0.xy);
	vec3 n_out13p0 = tex_frg_13_read.rgb;
	float n_out13p1 = tex_frg_13_read.a;

// VectorScalarMix:12
	vec3 n_out12p0 = mix(n_out10p0, n_out11p0, dot(n_out13p0, vec3(0.333333, 0.333333, 0.333333)));

// ColorOp:14
	vec3 n_out14p0 = vec3(1.0) - (vec3(1.0) - n_out9p0) * (vec3(1.0) - n_out12p0);

// Output:0
	ALBEDO = n_out14p0;

}

void light() {
// Output:0

}
"
graph_offset = Vector2( -104.111, -81.7292 )
modes/cull = 2
flags/world_vertex_coords = true
nodes/vertex/0/position = Vector2( 1260, 420 )
nodes/fragment/0/position = Vector2( 1240, 600 )
nodes/fragment/7/node = SubResource( 42 )
nodes/fragment/7/position = Vector2( 340, 300 )
nodes/fragment/8/node = SubResource( 53 )
nodes/fragment/8/position = Vector2( 320, 540 )
nodes/fragment/9/node = SubResource( 59 )
nodes/fragment/9/position = Vector2( 640, 500 )
nodes/fragment/10/node = SubResource( 1 )
nodes/fragment/10/position = Vector2( 320, 1100 )
nodes/fragment/11/node = SubResource( 2 )
nodes/fragment/11/position = Vector2( 300, 1340 )
nodes/fragment/12/node = SubResource( 3 )
nodes/fragment/12/position = Vector2( 720, 1220 )
nodes/fragment/13/node = SubResource( 4 )
nodes/fragment/13/position = Vector2( 420, 1580 )
nodes/fragment/14/node = SubResource( 5 )
nodes/fragment/14/position = Vector2( 920, 860 )
nodes/fragment/16/node = SubResource( 6 )
nodes/fragment/16/position = Vector2( -1140, 1600 )
nodes/fragment/18/node = SubResource( 7 )
nodes/fragment/18/position = Vector2( -1300, 1100 )
nodes/fragment/19/node = SubResource( 8 )
nodes/fragment/19/position = Vector2( -1300, 860 )
nodes/fragment/20/node = SubResource( 9 )
nodes/fragment/20/position = Vector2( -1060, 1000 )
nodes/fragment/21/node = SubResource( 10 )
nodes/fragment/21/position = Vector2( -820, 1560 )
nodes/fragment/26/node = SubResource( 11 )
nodes/fragment/26/position = Vector2( -660, 1240 )
nodes/fragment/29/node = SubResource( 12 )
nodes/fragment/29/position = Vector2( -1880, 1320 )
nodes/fragment/30/node = SubResource( 13 )
nodes/fragment/30/position = Vector2( -1380, 1420 )
nodes/fragment/31/node = SubResource( 14 )
nodes/fragment/31/position = Vector2( -1140, 1420 )
nodes/fragment/33/node = SubResource( 15 )
nodes/fragment/33/position = Vector2( -3180, 1620 )
nodes/fragment/34/node = SubResource( 16 )
nodes/fragment/34/position = Vector2( -680, 960 )
nodes/fragment/35/node = SubResource( 17 )
nodes/fragment/35/position = Vector2( -1580, 1420 )
nodes/fragment/36/node = SubResource( 18 )
nodes/fragment/36/position = Vector2( -1480, 1900 )
nodes/fragment/37/node = SubResource( 19 )
nodes/fragment/37/position = Vector2( -980, 1960 )
nodes/fragment/38/node = SubResource( 20 )
nodes/fragment/38/position = Vector2( -740, 1960 )
nodes/fragment/40/node = SubResource( 21 )
nodes/fragment/40/position = Vector2( -2860, 2140 )
nodes/fragment/41/node = SubResource( 22 )
nodes/fragment/41/position = Vector2( -1180, 1980 )
nodes/fragment/42/node = SubResource( 23 )
nodes/fragment/42/position = Vector2( -440, 1800 )
nodes/fragment/49/node = SubResource( 24 )
nodes/fragment/49/position = Vector2( -500, 2040 )
nodes/fragment/50/node = SubResource( 25 )
nodes/fragment/50/position = Vector2( -2980, 1340 )
nodes/fragment/51/node = SubResource( 26 )
nodes/fragment/51/position = Vector2( -2700, 1400 )
nodes/fragment/52/node = SubResource( 27 )
nodes/fragment/52/position = Vector2( -2340, 1260 )
nodes/fragment/53/node = SubResource( 28 )
nodes/fragment/53/position = Vector2( -2400, 1520 )
nodes/fragment/55/node = SubResource( 29 )
nodes/fragment/55/position = Vector2( -2160, 1420 )
nodes/fragment/56/node = SubResource( 30 )
nodes/fragment/56/position = Vector2( -460, 980 )
nodes/fragment/57/node = SubResource( 31 )
nodes/fragment/57/position = Vector2( -720, 1380 )
nodes/fragment/58/node = SubResource( 32 )
nodes/fragment/58/position = Vector2( -460, 1220 )
nodes/fragment/60/node = SubResource( 33 )
nodes/fragment/60/position = Vector2( -200, 900 )
nodes/fragment/61/node = SubResource( 34 )
nodes/fragment/61/position = Vector2( -180, 1100 )
nodes/fragment/62/node = SubResource( 35 )
nodes/fragment/62/position = Vector2( 40, 980 )
nodes/fragment/63/node = SubResource( 36 )
nodes/fragment/63/position = Vector2( -2500, 1920 )
nodes/fragment/64/node = SubResource( 37 )
nodes/fragment/64/position = Vector2( -2320, 1960 )
nodes/fragment/65/node = SubResource( 38 )
nodes/fragment/65/position = Vector2( -2020, 1840 )
nodes/fragment/66/node = SubResource( 39 )
nodes/fragment/66/position = Vector2( -2020, 2020 )
nodes/fragment/68/node = SubResource( 40 )
nodes/fragment/68/position = Vector2( -1780, 1938.25 )
nodes/fragment/69/node = SubResource( 41 )
nodes/fragment/69/position = Vector2( -620, 1680 )
nodes/fragment/70/node = SubResource( 43 )
nodes/fragment/70/position = Vector2( -860, 1760 )
nodes/fragment/71/node = SubResource( 44 )
nodes/fragment/71/position = Vector2( -520, 2160 )
nodes/fragment/72/node = SubResource( 45 )
nodes/fragment/72/position = Vector2( -260, 2040 )
nodes/fragment/73/node = SubResource( 46 )
nodes/fragment/73/position = Vector2( -240, 1840 )
nodes/fragment/74/node = SubResource( 47 )
nodes/fragment/74/position = Vector2( 180, 1780 )
nodes/fragment/75/node = SubResource( 48 )
nodes/fragment/75/position = Vector2( 0, 1740 )
nodes/fragment/76/node = SubResource( 49 )
nodes/fragment/76/position = Vector2( -20, 1900 )
nodes/fragment/77/node = SubResource( 50 )
nodes/fragment/77/position = Vector2( -3240, 1840 )
nodes/fragment/78/node = SubResource( 51 )
nodes/fragment/78/position = Vector2( -2840, 2280 )
nodes/fragment/79/node = SubResource( 52 )
nodes/fragment/79/position = Vector2( -2960, 1660 )
nodes/fragment/80/node = SubResource( 54 )
nodes/fragment/80/position = Vector2( -2520, 2220 )
nodes/fragment/81/node = SubResource( 55 )
nodes/fragment/81/position = Vector2( -2740, 1680 )
nodes/fragment/82/node = SubResource( 56 )
nodes/fragment/82/position = Vector2( -2320, 2160 )
nodes/fragment/83/node = SubResource( 57 )
nodes/fragment/83/position = Vector2( -1840, 1620 )
nodes/fragment/85/node = SubResource( 58 )
nodes/fragment/85/position = Vector2( 280, 800 )
nodes/fragment/connections = PoolIntArray( 8, 0, 9, 1, 7, 0, 9, 0, 11, 0, 12, 1, 10, 0, 12, 0, 13, 0, 12, 2, 12, 0, 14, 1, 9, 0, 14, 0, 19, 0, 20, 0, 18, 0, 20, 1, 30, 0, 31, 0, 30, 1, 31, 1, 31, 0, 34, 1, 20, 0, 34, 0, 35, 0, 30, 0, 37, 0, 38, 0, 37, 1, 38, 1, 36, 0, 41, 0, 41, 0, 37, 0, 38, 0, 42, 1, 14, 0, 0, 0, 51, 0, 52, 0, 51, 1, 53, 0, 52, 0, 55, 0, 53, 0, 55, 1, 55, 0, 29, 0, 34, 0, 56, 0, 57, 0, 58, 1, 26, 0, 58, 0, 56, 0, 60, 0, 56, 1, 61, 0, 58, 0, 60, 1, 58, 0, 61, 1, 60, 0, 62, 0, 61, 0, 62, 1, 63, 0, 64, 0, 64, 0, 65, 0, 64, 1, 66, 0, 65, 0, 68, 0, 66, 0, 68, 1, 68, 0, 36, 0, 18, 0, 21, 0, 16, 0, 21, 1, 21, 0, 69, 0, 69, 0, 42, 0, 70, 0, 69, 1, 49, 0, 72, 0, 71, 0, 72, 1, 42, 0, 73, 0, 73, 0, 75, 0, 73, 1, 76, 0, 72, 0, 75, 1, 72, 0, 76, 1, 75, 0, 74, 0, 76, 0, 74, 1, 74, 0, 13, 0, 77, 0, 79, 1, 79, 0, 81, 0, 33, 0, 79, 0, 81, 0, 52, 1, 81, 1, 53, 1, 40, 0, 80, 0, 78, 0, 80, 1, 80, 0, 82, 0, 82, 0, 65, 1, 82, 1, 66, 1, 29, 0, 35, 0, 50, 0, 51, 0, 83, 0, 35, 1, 83, 0, 41, 1, 62, 0, 85, 0, 85, 0, 9, 2 )
